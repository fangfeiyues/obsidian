
「work」

   1. AI含硅率:

   2. 贷超: 数据运营的日常（逾期、还款计划）

   3. 有赞寄件: 3月补扣&退款（可否AI串行流程）

   4. 上门取件: 上门取件增加商家端价值透传项目发布


--------------------------------【项目】--------------------------------


「1、退货包运费」

   1. 风控策略与定价
      1. 风控策略：FREIGHT_ADMITTANCE 黑白名单 
      2. 出险定价：FREIGHT_RISK_PRICE 风险率 -> 定价
         1. fi_service_team_final_outdangered_rate_price (出险等级对应的定价)
         2. outdangered_rate_recent3 近期出险率 = 退货单 / 投保单
         3. outdangered_Rate_7_90_day3
      3. 存在问题？

   2. 基础服务 -> 给谁开通
      1. 实体：服务记录、变更记录、数据统计
      2. 属性：商家、状态、时间、版本号
      3. 能力：开通、关闭、申请

   3. 保单 -> 给谁投保，并收取多少保费
      1. 实体：保单、保单权益记录
      2. 属性：单号、外部单号、保险单号、状态、【保费】
      3. 能力：订立、预投保、投保、出险、补贴成功
      4. 扩展：
         a. 升级版：权益配置固定保费和赔付
         b. 商家版：依赖倒置，组件化

   4. 理赔 -> 给谁赔付多少钱
      1. 子域：理赔、保险 -> 实体：理赔申请单、理赔单、理赔材料、理赔定价、保险核心
      2. 能力：申请理赔、选择理赔、理赔出险
      3. 属性：理赔单、保单、【理赔金】、状态、受益人
      4. 扩展：
         a. 上游保单
         b. 下游保险


「2、上门取件」

   1. 下单：支付 - 初始化 -> 补贴申请 -> 三方下单(超时) -> 待揽件 -> 同步交易

   2. 修改

   3. 取消


「3、one by one」

   1、增值：突出架构、模型、开放；难点？

      1. 退货包运费
         1.1 理赔领域优化：对外不够解耦（补贴概念入侵）、对内不够内聚（理赔金额依赖在保险底层）
         1.2 离线风控：出现率 -> 每日定价 -> 加工成指标 -> 产品配置策略 -> 关联具体事件

      2. 有赞寄件&上门取件
         2.1 分布式事务：TCC，着重因try网络超时导致的事务悬挂问题
         2.2 组件开放性：节点开放（倒置依赖） + 流程开放（组件可插拔、数据通用化）


   2、分销员：突出分布式、高流量；难点？

      1. 架构问题（记不清了，慎用）
         1.1 归因依赖：公司级的归因中心
         1.2 计费模型：跟导购模型依赖

      2. 分布式一致性
         2.1 多版本 -> 可重复读
         2.2 状态机 -> 解决乱序

      3. 高流量高并发
         3.1 消息流量大： Redis zset滑动窗口（重点实现！） + VIP通道
         3.2 MySQL: HotKey、索引优化（索引覆盖、索引失效、limit深翻页、）
         3.3 资损防控：离线脚本对账如数据统计 + 实时校准平台


--------------------------------【记录】---------------------------------
 

「1、减肥」

   05.12｜162，重启爬楼，本周目标-5
   05.14｜158，两天晚上没怎么吃，控制住！


「2、关系」

   1. 自我｜不会考虑他人 -> 保护自己、降低期待 ｜ 好像要明说要表达？
   2. 差劲｜什么都不行（懒惰、素质..） -> 提升自己、尽量远离 ｜ 说了也没用督促也没用

   家庭已是如此，事业要有所成！